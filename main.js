!function(){"use strict";var t={d:function(e,r){for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}};t.d({},{XV:function(){return jt},QH:function(){return Ot},gR:function(){return Et}});var e={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function n(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?n(Object(r),!0).forEach((function(e){var n,o,i;n=t,o=e,i=r[e],(o=u(o))in n?Object.defineProperty(n,o,{value:i,enumerable:!0,configurable:!0,writable:!0}):n[o]=i})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,u(n.key),n)}}function u(t){var e=function(t,e){if("object"!=r(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!=r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==r(e)?e:String(e)}var c=new(function(){function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.baseUrl=e,this.headers=r}var e,r;return e=t,(r=[{key:"getInitialCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers}).then((function(t){if(!t.ok)throw new Error("Server error: ".concat(t.status));return t.json()})).catch((function(t){return console.error("Error:",t)}))}},{key:"getUserInfo",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers}).then((function(t){if(!t.ok)throw new Error("Server error: ".concat(t.status));return t.json()})).catch((function(t){return console.error("Error:",t)}))}},{key:"updateUserInfo",value:function(t,e){return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:o(o({},this.headers),{},{"Content-Type":"application/json"}),body:JSON.stringify({name:t,about:e})}).then((function(t){if(!t.ok)throw new Error("Server error: ".concat(t.status));return t.json()})).catch((function(t){return console.error("Error:",t)}))}},{key:"getNewCards",value:function(t,e){return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:o(o({},this.headers),{},{"Content-Type":"application/json"}),body:JSON.stringify({name:t,link:e})}).then((function(t){if(!t.ok)throw new Error("Server error: ".concat(t.status));return t.json()})).catch((function(t){return console.error("Error:",t)}))}},{key:"deleteCard",value:function(t){return fetch("".concat(this.baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this.headers}).then((function(t){if(!t.ok)throw new Error("Server error: ".concat(t.status));return t.json()})).catch((function(t){return console.error("Error:",t)}))}},{key:"likeCard",value:function(t,e){var r=e?"DELETE":"PUT";return fetch("".concat(this.baseUrl,"/cards/").concat(t,"/likes"),{method:r,headers:this.headers}).then((function(t){if(!t.ok)throw new Error("Server error: ".concat(t.status));return t.json()})).catch((function(t){return console.error("Error:",t)}))}},{key:"updateAvatar",value:function(t){return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:o(o({},this.headers),{},{"Content-Type":"application/json"}),body:JSON.stringify({avatar:t})}).then((function(t){if(!t.ok)throw new Error("Server error: ".concat(t.status));return t.json()})).catch((function(t){return console.error("Error:",t)}))}}])&&i(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}())("https://around-api.es.tripleten-services.com/v1/",{authorization:"5cb824c7-18ee-4a7f-a0d4-afa785bcbcee"});function a(t){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},a(t)}function l(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,s(n.key),n)}}function s(t){var e=function(t,e){if("object"!=a(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!=a(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==a(e)?e:String(e)}var f=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this.fixed=document.querySelector(".body"),this._handleEscClose=this._handleEscClose.bind(this),this.open=this.open.bind(this)}var e,r;return e=t,(r=[{key:"open",value:function(){this._popup.classList.add("popup_open"),document.addEventListener("keyup",this._handleEscClose),this.fixed.classList.add("fix"),this.setEventListeners()}},{key:"close",value:function(){this._popup.classList.remove("popup_open"),document.removeEventListener("keyup",this._handleEscClose),this.fixed.classList.remove("fix")}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("click",(function(e){(e.target.classList.contains("popup_open")||e.target.classList.contains("popup__button-typeclose"))&&t.close()}))}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}}])&&l(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function p(t){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},p(t)}function y(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,b(n.key),n)}}function b(t){var e=function(t,e){if("object"!=p(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!=p(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==p(e)?e:String(e)}function m(t,e,r){return e=d(e),function(t,e){if(e&&("object"===p(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,h()?Reflect.construct(e,r||[],d(t).constructor):e.apply(t,r))}function h(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(h=function(){return!!t})()}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=d(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},v.apply(this,arguments)}function d(t){return d=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},d(t)}function _(t,e){return _=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},_(t,e)}var S=function(t){function e(t){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(r=m(this,e,[t]))._closeButton=r._popup.querySelector(".button_close"),r._closeButton.addEventListener("click",(function(){return r.close()})),r}var r,n;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&_(t,e)}(e,t),r=e,(n=[{key:"open",value:function(t,r){v(d(e.prototype),"open",this).call(this);var n=document.querySelector(".popup__element"),o=n.nextElementSibling;n.src=r,n.alt=t,o.textContent=t}},{key:"close",value:function(){v(d(e.prototype),"close",this).call(this),v(d(e.prototype),"setEventListeners",this).call(this),document.removeEventListener("keydown",this._handleEscClose)}}])&&y(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),e}(f);function w(t){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},w(t)}function g(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,E(n.key),n)}}function E(t){var e=function(t,e){if("object"!=w(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!=w(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==w(e)?e:String(e)}function j(t,e,r){return e=P(e),function(t,e){if(e&&("object"===w(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return k(t)}(t,O()?Reflect.construct(e,r||[],P(t).constructor):e.apply(t,r))}function O(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(O=function(){return!!t})()}function k(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function C(){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=P(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},C.apply(this,arguments)}function P(t){return P=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},P(t)}function L(t,e){return L=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},L(t,e)}var q=function(t){function e(t,r){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=j(this,e,[t]))._formSubmitHandler=r,n._form=n._popup.querySelector(".popup__form"),n._handleFormSubmit=n._handleFormSubmit.bind(k(n)),n}var r,n;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&L(t,e)}(e,t),r=e,(n=[{key:"_getInputValues",value:function(){var t=this;return this._inputList=this._form.querySelectorAll("input"),this._formValues={},this._inputList.forEach((function(e){t._formValues[e.name]=e.value})),this._formValues}},{key:"_handleFormSubmit",value:function(t){t.preventDefault(),this._formSubmitHandler(this._getInputValues())}},{key:"setEventListeners",value:function(){C(P(e.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this._handleFormSubmit)}},{key:"open",value:function(){C(P(e.prototype),"open",this).call(this)}},{key:"close",value:function(){C(P(e.prototype),"close",this).call(this),this._form.reset()}}])&&g(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),e}(f);function T(t){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},T(t)}function x(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,B(n.key),n)}}function B(t){var e=function(t,e){if("object"!=T(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!=T(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==T(e)?e:String(e)}function I(t,e,r){return e=U(e),function(t,e){if(e&&("object"===T(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,R()?Reflect.construct(e,r||[],U(t).constructor):e.apply(t,r))}function R(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(R=function(){return!!t})()}function A(){return A="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=U(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},A.apply(this,arguments)}function U(t){return U=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},U(t)}function D(t,e){return D=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},D(t,e)}var V=function(t){function e(t){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(r=I(this,e,[t]))._confirmButton=r._popup.querySelector(".popup__confirm-button"),r}var r,n;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&D(t,e)}(e,t),r=e,(n=[{key:"setConfirmAction",value:function(t){var e=this;this._confirmHandler=t,this._confirmButton.removeEventListener("click",this._handleConfirm),this._handleConfirm=function(t){t.preventDefault(),e._confirmHandler(),e.close()},this._confirmButton.addEventListener("click",this._handleConfirm)}},{key:"setEventListeners",value:function(){A(U(e.prototype),"setEventListeners",this).call(this)}}])&&x(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),e}(f);function H(t){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},H(t)}function N(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,z(n.key),n)}}function z(t){var e=function(t,e){if("object"!=H(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!=H(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==H(e)?e:String(e)}var F=function(){function t(e){var r=e.nameSelector,n=e.jobSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._nameElement=document.querySelector(r),this._jobElement=document.querySelector(n)}var e,r;return e=t,(r=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}},{key:"setUserInfo",value:function(t){var e=t.name,r=t.job;this._nameElement.textContent=e,this._jobElement.textContent=r}}])&&N(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}(),G=document.querySelector(".popup__form"),J=document.querySelector("#popup__avatar"),M=document.querySelector(".popup__form-add"),Q=document.querySelector(".profile__button-add"),X=document.querySelector(".popup__input-name"),K=document.querySelector(".popup__input-profesion"),W=document.querySelector(".profile__button-edit"),Y=new S(".popup_image"),Z=document.querySelector(".profile__avatar"),$=document.querySelector(".profile__name"),tt=document.querySelector(".profile__profession"),et=document.querySelector("#submit__add"),rt=document.querySelector("#popup__profile"),nt=document.querySelector("#submit__avatar"),ot=document.querySelector(".profile__buttonAvatar"),it=new q("#popup__add",Ot),ut=new q("#popup__edit",jt),ct=new q("#popup__avatar",Et),at=new F({nameSelector:".profile__name",jobSelector:".profile__profession"}),lt=new V("#popup__confirmacion");function st(t){return st="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},st(t)}function ft(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,pt(n.key),n)}}function pt(t){var e=function(t,e){if("object"!=st(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!=st(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==st(e)?e:String(e)}var yt=function(){function t(e,r,n,o,i,u){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.name=e,this.link=r,this.selector=i,this._handleCardClick=u,this.id=n,this.likes=o}var e,r;return e=t,(r=[{key:"_eventListener",value:function(t){var e=this;return this.clone.querySelector(".button__type-like").addEventListener("click",(function(){return e._likeCard()})),this.clone.querySelector(".button__delete").addEventListener("click",(function(t){return e._deleteCard(t)})),this.clone.querySelector(".images__card").addEventListener("click",(function(){e._handleCardClick(e.name,e.link)})),t}},{key:"_deleteCard",value:function(t){var e=this;lt.setConfirmAction((function(){var r=t.target.closest(".card"),n=document.querySelector(".popup__confirm-button");n.textContent="Eliminando...",c.deleteCard(e.id).then((function(){r.remove(),n.textContent="Si"})).catch((function(t){return console.error("Error al eliminar la tarjeta:",t)}))})),lt.open()}},{key:"_likeCard",value:function(){var t=this,e=this.likeButton.classList.contains("button__like-active");c.likeCard(this.id,e).then((function(r){t.likeButton.classList.toggle("button__like-active",!e),t.likeButton.classList.toggle("button__like",!e)})).catch((function(t){return console.error("Error al actualizar el me gusta:",t)}))}},{key:"createCardElement",value:function(){return this.card=document.querySelector(this.selector),this.clone=this.card.content.cloneNode(!0),this.likeButton=this.clone.querySelector(".button__type-like"),this.likeCountElement=this.clone.querySelector(".card__likes"),this._setAttributes(),this._setTextContent(),this._eventListener(),this.clone}},{key:"_setAttributes",value:function(){var t=this.clone.querySelector("img");t.setAttribute("src",this.link),t.setAttribute("alt",this.name)}},{key:"_setTextContent",value:function(){this.clone.querySelector(".card__text").textContent=this.name}}])&&ft(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function bt(t){return bt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},bt(t)}function mt(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,ht(n.key),n)}}function ht(t){var e=function(t,e){if("object"!=bt(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!=bt(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==bt(e)?e:String(e)}var vt=function(){function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.formElements=document.querySelectorAll(e.formSelector),this.inputSelector=e.inputSelector,this.submitButtonSelector=e.submitButtonSelector,this.inactiveButtonClass=e.inactiveButtonClass,this.inputErrorClass=e.inputErrorClass,this.errorClass=e.errorClass,this.enableValidation(r)}var e,r;return e=t,(r=[{key:"enableValidation",value:function(t){var e=this,r=Array.from(t.querySelectorAll(this.inputSelector)),n=t.querySelector(this.submitButtonSelector);this.toggleSubmitButton(n,t),r.forEach((function(r){r.addEventListener("input",(function(){e.handleInput(r,t,n)}))}))}},{key:"handleInput",value:function(t,e,r){t.validity.valid?this.hideInputError(t,e):this.showInputError(t,e),this.toggleSubmitButton(r,e)}},{key:"showInputError",value:function(t,e){t.classList.add(this.inputErrorClass);var r=e.querySelector("#".concat(t.id,"-error"));r.textContent=t.validationMessage,r.classList.add(this.errorClass)}},{key:"hideInputError",value:function(t,e){t.classList.remove(this.inputErrorClass);var r=e.querySelector("#".concat(t.id,"-error"));r.textContent="",r.classList.remove(this.errorClass)}},{key:"toggleSubmitButton",value:function(t,e){Array.from(e.querySelectorAll(this.inputSelector)).some((function(t){return!t.validity.valid||""===t.value.trim()}))?t.classList.add(this.inactiveButtonClass):t.classList.remove(this.inactiveButtonClass)}}])&&mt(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function dt(t){return dt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},dt(t)}function _t(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,St(n.key),n)}}function St(t){var e=function(t,e){if("object"!=dt(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!=dt(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==dt(e)?e:String(e)}var wt,gt=function(){function t(e,r){var n=e.data,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderedItems=n,this._renderer=o,this._container=document.querySelector(r)}var e,r;return e=t,(r=[{key:"renderItems",value:function(){var t=this;this._renderedItems.forEach((function(e){return t._renderer(e)}))}},{key:"setItem",value:function(t){this._container.prepend(t)}}])&&_t(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function Et(t){var e=t["input-url"];nt.textContent="Guardando...",c.updateAvatar(e).then((function(t){Z.src=t.avatar,ct.close(),nt.textContent="Save"})).catch((function(t){console.error("Error al actualizar el avatar:",t)}))}function jt(t){var e=t["input-name"],r=t["input-job"];rt.textContent="Guardando...",c.updateUserInfo(e,r).then((function(t){at.setUserInfo({name:t.name,job:t.about}),rt.textContent="Guardar"})).catch((function(t){console.error("Error al actualizar el perfil:",t)})),ut.close()}function Ot(t){var e=t["input-nameadd"],r=t["input-url"];et.textContent="Guardando...",c.getNewCards(e,r).then((function(t){var e=t.name,r=t.link,n=t._id,o=t.likes,i=new yt(e,r,n,o,"#template__card",Y.open).createCardElement();wt.setItem(i),ut.close(),et.textContent="Create",it.close()})).catch((function(t){console.error("Error al crear la carta:",t)}))}c.getUserInfo().then((function(t){$.textContent=t.name,tt.textContent=t.about,Z.src=t.avatar})),Q.addEventListener("click",(function(t){t.preventDefault(),it.open()})),W.addEventListener("click",(function(){c.getUserInfo().then((function(t){X.value=t.name,K.value=t.about,new vt(e,G),ut.open()}))})),ot.addEventListener("click",(function(){new vt(e,J),ct.open()})),c.getInitialCards().then((function(t){(wt=new gt({data:t,renderer:function(t){var e=t.name,r=t.link,n=t._id,o=t.likes,i=new yt(e,r,n,o,"#template__card",Y.open).createCardElement();wt.setItem(i)}},".cards")).renderItems(),ut.setEventListeners(),it.setEventListeners()})),new vt(e,M)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,